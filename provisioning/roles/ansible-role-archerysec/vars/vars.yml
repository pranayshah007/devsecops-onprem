---
    # a unix path-friendly name (IE, no spaces or special characters)
    project_name: archerysec

    app_name: archerysec
    
    # the base path to install to. You should not need to change this.
    install_root: /home/archerysec/app

    # Deployer User and Groups
    deployer_user: archerysec
    deployer_group: archerysec

    # App Directory
    app_dir: "{{ install_root }}"
    
    # the python module path to your project's wsgi file. E.g. for a directory
    # layout like this (assuming `archerysec` is the project_name and top level
    # directory name):
    # archerysec
    # ├── hello
    # │   ├── apps
    # │   ├── __init__.py
    # │   ├── settings.py
    # │   ├── urls.py
    # │   └── wsgi.py
    # ├── manage.py
    # └── requirements.txt
    # the correct wsgi_module value would be `hello.wsgi`
    wsgi_module: archerysec.wsgi
    
    # any directories that need to be added to the PYTHONPATH.
    pythonpath: "{{ install_root }}"
    
    # the git repository URL for the project
    project_repo: https://github.com/archerysec/archerysec/archive/v{{archerysec_version}}.tar.gz
        
    # a private key that has access to the repository URL
    ssh_private_key: ~/.ssh/id_rsa

    # Application Dependencies Setup
    venv_dir: "{{ install_root }}/envs"
    venv_python: '{{ venv_dir }}/bin/python3.6'
    
    # The value of your django project's STATIC_ROOT settings.
    # This will be the directory that django's `collectstatic` management command
    # copies static files to, and it must be an absolute path. The default value 
    # here assumes that STATIC_ROOT is set in your settings.py like so:
    # STATIC_ROOT = os.path.abspath(os.path.join(BASE_DIR, 'static'))
    static_root: "{{ install_root }}/static"
    
    # the dns name or names (space separated) for your server
    server_name: archerysec.eshoppeweb.com www.archerysec.eshoppeweb.com
    
    # database setup. Note that because this playbook doesn't touch the default 
    # postgres pg_hba.conf file, we use local password-based authentication for
    # postgres and thus you need to provide a username and password, and your
    # settings.py MUST set "localhost" or "127.0.0.1" as the HOST value. For
    # example, the default settings here assume the following values in
    # settings.py:
    # DATABASES = {
    #     'default': {
    #         'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #         'HOST': 'localhost',
    #         'NAME': 'hello',
    #         'USER': 'hello',
    #         'PASSWORD': 'changeme',
    #     }
    # }
    db_name: hello
    db_user: hello
    db_password: changeme
    db_host: localhost

    # Deploy Dir in App Directory
    deploy_dir: '{{ app_dir }}/deploy'

    # WSGI Vars
    django_wsgi_module: archerysecurity.wsgi
    django_settings_module: archerysecurity.settings.production
    django_secret_key: 'cwed234r4345gf45g45g56h565h5yttyh6uj6n5tb'
    database_url: '{{ db_url }}'

    # Remote Server Details
    server_ip: 0.0.0.0
    wsgi_server_port: 8000

    # Mail server 
    mail_host: 0.0.0.0
    mail_port: 1025
    
    # apt packages, you should not need to change this unless you have packages
    # listed in your requirements.txt that depend on system packages.
    system_packages:
#      - git
#      - nginx
      - gunicorn
      - postgresql
      - virtualenv
#      - postgresql-server-dev-all
#     - python-pip Getting installed globally in jenkins role
      - python3-dev
#      - python-dev
      - python3-psycopg2
#      - openjdk-8-jdk
    
    # vim:ft=ansible:

